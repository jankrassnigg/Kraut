set(DFILES "")
foreach(DFILE ${DFILES_LIST})
  file(RELATIVE_PATH DFILE "${CMAKE_CURRENT_SOURCE_DIR}" "${DFILE}")
  string(REPLACE "/" "\\" DFILE "${DFILE}")
  string(REPLACE " " "\\ " DFILE "${DFILE}")
  set(DFILES "${DFILES}${DFILE} ")
endforeach()
find_program(EZ_DMD "dmd.exe" PATHS "$ENV{EZ_DMD_PATH}/windows/bin" NO_DEFAULT_PATH)
find_program(EZ_DMAKE "make.exe" PATHS "$ENV{EZ_DMD_PATH}/windows/bin" NO_DEFAULT_PATH)


get_filename_component(EZ_DMD_PATH "${EZ_DMD}" DIRECTORY)
string(REPLACE "/" "\\" EZ_DMD_PATH "${EZ_DMD_PATH}")

if(PROJECT_TYPE STREQUAL "exe")
  SET(DOUTFILENAME "${PROJECT_NAME}.exe")
else()
  SET(DOUTFILENAME "ez${PROJECT_NAME}.${PROJECT_TYPE}")
endif()
SET(MAKEFILENAME "${CMAKE_BINARY_DIR}/dmak/ez${PROJECT_NAME}.mak")
string(REPLACE "/" "\\" MAKEFILENAME "${MAKEFILENAME}")
SET(DLIBS_DEBUG "")
SET(DLIBS_RELEASE "")
SET(DLIBS_MINSIZE "")
SET(DLIBS_RELWITHDEB "")

file(RELATIVE_PATH DOBJ_DIR "${CMAKE_SOURCE_DIR}" "${CMAKE_CURRENT_SOURCE_DIR}")
set(DOBJ_DIR "${CMAKE_BINARY_DIR}/${DOBJ_DIR}")

foreach(LIB ${LINK_LIBRARIES})
  foreach(CONFIG DEBUG RELEASE MINSIZE RELWITHDEB)
	set(DLIBS_${CONFIG} "${DLIBS_${CONFIG}}${OUTPUT_LIB_${CONFIG}}/ez${LIB}.lib ")
	string(REPLACE "/" "\\" DLIBS_${CONFIG} "${DLIBS_${CONFIG}}")
  endforeach()
endforeach()

set(DINCLUDE_DIRS_FMT "")
foreach(INC ${DINCLUDE_DIRS})
  set(DINCLUDE_DIRS_FMT "${DINCLUDE_DIRS_FMT}-I\"${CMAKE_SOURCE_DIR}/${INC}\" ")
endforeach()

foreach(CONF DEBUG RELEASE MINSIZE RELWITHDEB)
  set(DPOST_BUILD_${CONF}_FMT "")
  foreach(CMD ${DPOST_BUILD_${CONF}})
    set(DPOST_BUILD_${CONF}_FMT "${DPOST_BUILD_${CONF}_FMT}\t@${CMD}\n")
  endforeach()
  string(REPLACE "/" "\\" DPOST_BUILD_${CONF}_FMT "${DPOST_BUILD_${CONF}_FMT}")
endforeach()

configure_file("${CMAKE_SOURCE_DIR}/Code/BuildSystem/CMake/DMakeFileTemplate-${PROJECT_TYPE}.mak" "${MAKEFILENAME}" @ONLY)

foreach(DFILE ${DFILES_LIST})
  get_filename_component(SRC_GRP "${DFILE}" DIRECTORY)
  string(REPLACE "/" "_" GRP_NAME "${SRC_GRP}")
  string(REPLACE " " "_" GRP_NAME "${SRC_GRP}")
  list(APPEND SRC_GRP_${GRP_NAME} ${DFILE})
  list(APPEND GRP_LIST "${GRP_NAME}")
  file(RELATIVE_PATH SRC_GRP "${CMAKE_CURRENT_SOURCE_DIR}" "${SRC_GRP}")
  string(REPLACE "/" "\\" SRC_GRP "${SRC_GRP}")
endforeach()

list(REMOVE_DUPLICATES GRP_LIST)
foreach(GRP ${GRP_LIST})
  set(GRP_FILES ${SRC_GRP_${GRP}})
  list(LENGTH GRP_FILES LIST_LEN)
  if(LIST_LEN GREATER 0)
    list(GET GRP_FILES 0 FIRST_FILE)
    get_filename_component(GRP_DIR "${FIRST_FILE}" DIRECTORY)
	 file(RELATIVE_PATH GRP_DIR "${CMAKE_CURRENT_SOURCE_DIR}" "${GRP_DIR}")
    string(REPLACE "/" "\\" GRP_DIR "${GRP_DIR}")
    source_group("${GRP_DIR}" FILES ${GRP_FILES})
  endif()
endforeach()

add_custom_target("${PROJECT_NAME}" ALL ${EZ_DMAKE} -f \"${MAKEFILENAME}\" $(Configuration) VCInstallDir=\"$(VCInstallDir)lib\\amd64\" WindowsSdkDir=\"$(WindowsSdkDir)Lib\\winv6.3\\um\\x64\" WORKING_DIRECTORY "${CMAKE_CURRENT_SOURCE_DIR}" SOURCES ${DFILES_LIST})
if(LINK_LIBRARIES)
  add_dependencies("${PROJECT_NAME}" ${LINK_LIBRARIES})
endif()

# Get the name of this folder
get_filename_component (CUR_FOLDER_NAME ${CMAKE_CURRENT_SOURCE_DIR} NAME_WE)
get_filename_component (PARENT_FOLDER ${CMAKE_CURRENT_SOURCE_DIR} PATH)
get_filename_component (PARENT_FOLDER_NAME ${PARENT_FOLDER} NAME_WE)

SET_PROPERTY(GLOBAL PROPERTY USE_FOLDERS ON)
file(RELATIVE_PATH RELATIVE_PARENT_FOLDER ${CMAKE_SOURCE_DIR} ${PARENT_FOLDER})
SET_PROPERTY(TARGET ${PROJECT_NAME} PROPERTY FOLDER ${RELATIVE_PARENT_FOLDER})

ADD_TO_TARGET_LIST(C++)