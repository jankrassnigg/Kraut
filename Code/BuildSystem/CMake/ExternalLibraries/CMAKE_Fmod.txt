#cmake

macro(AddFmod)

    # Ignore call if Fmod is disabled!
    if (EZ_BUILD_FMOD)
		set (EZ_FMOD_DIR "" CACHE PATH "Directory of the Fmod SDK")
		
		set (EZ_FMOD_DIR_STUDIO "${EZ_FMOD_DIR}/api/studio")
		set (EZ_FMOD_DIR_FSBANK "${EZ_FMOD_DIR}/api/fsbank")
		set (EZ_FMOD_DIR_LOWLVL "${EZ_FMOD_DIR}/api/lowlevel")

		include_directories ("${EZ_FMOD_DIR_STUDIO}/inc")
		include_directories ("${EZ_FMOD_DIR_FSBANK}/inc")
		include_directories ("${EZ_FMOD_DIR_LOWLVL}/inc")
		
		link_directories ("${EZ_FMOD_DIR_STUDIO}/lib")
		link_directories ("${EZ_FMOD_DIR_FSBANK}/lib")
		link_directories ("${EZ_FMOD_DIR_LOWLVL}/lib")
		
		set (EZ_FMOD_STUDIO_LIB "")
		set (EZ_FMOD_FSBANK_LIB "")
		set (EZ_FMOD_LOWLVL_LIB "")

		if (${BUILDSYSTEM_PLATFORM_WINDOWS_UWP})

		  SET (EZ_FMOD_LOWLVL_LIB ${EZ_FMOD_LOWLVL_LIB} fmod_X86)
		  SET (EZ_FMOD_STUDIO_LIB ${EZ_FMOD_STUDIO_LIB} fmodstudio_X86)
		  
		elseif (${BUILDSYSTEM_PLATFORM_WINDOWS_DESKTOP})

		  if (${BUILDSYSTEM_PLATFORM_64BIT})
		  
			SET (EZ_FMOD_LOWLVL_LIB ${EZ_FMOD_LOWLVL_LIB} fmod64_vc)
			SET (EZ_FMOD_STUDIO_LIB ${EZ_FMOD_STUDIO_LIB} fmodstudio64_vc)
			
		  else()
		  
			SET (EZ_FMOD_LOWLVL_LIB ${EZ_FMOD_LOWLVL_LIB} fmod_vc)
			SET (EZ_FMOD_STUDIO_LIB ${EZ_FMOD_STUDIO_LIB} fmodstudio_vc)
			
		  endif()

		endif()

		SET (LINK_LIBRARIES ${LINK_LIBRARIES} ${EZ_FMOD_STUDIO_LIB} ${EZ_FMOD_FSBANK_LIB} ${EZ_FMOD_LOWLVL_LIB})

		# Dlls need some extra care.

		# Make part of the AppX bundle for uwp build
		if (BUILDSYSTEM_PLATFORM_WINDOWS_UWP)
			SET (FMOD_DLLS
				${EZ_FMOD_DIR_STUDIO}/lib/${EZ_FMOD_STUDIO_LIB}.dll
				${EZ_FMOD_DIR_LOWLVL}/lib/${EZ_FMOD_LOWLVL_LIB}.dll
				#${EZ_FMOD_DIR_FSBANK}/lib/${EZ_FMOD_FSBANK_LIB}.dll
			)

			set_property(SOURCE ${FMOD_DLLS} PROPERTY VS_DEPLOYMENT_CONTENT 1)
			set_property(SOURCE ${FMOD_DLLS} PROPERTY VS_DEPLOYMENT_LOCATION "")
			source_group("Fmod Dlls" FILES ${FMOD_DLLS})

			set(CONTENT_FILES ${CONTENT_FILES} ${FMOD_DLLS})
		endif()	
	endif()

endmacro()